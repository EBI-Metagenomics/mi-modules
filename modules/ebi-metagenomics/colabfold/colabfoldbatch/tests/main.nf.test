nextflow_process {

    name "Test Process COLABFOLD_COLABFOLDBATCH"
    script "../main.nf"
    process "COLABFOLD_COLABFOLDBATCH"

    tag "modules"
    tag "modules_nfcore"
    tag "colabfold"
    tag "colabfold/colabfoldbatch"

    test("small fasta protein") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${moduleDir}/tests/input_sequence.fa", checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.out_dir
                    with(process.out.out_dir) {
                        assert size() == 1
                        with(get(0).get(1)) {
                            File folder = new File(get(0).get(1))
                            File[] listOfFiles = folder.listFiles()
                            listOfFiles = listOfFiles.sort { it.name }
                            assert listOfFiles.length == 20
                        }
                    }
                },
                { assert snapshot(process.out.versions).match('versions') }
            )
        }

    }

    test("stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${moduleDir}/tests/input_sequence.fa", checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
