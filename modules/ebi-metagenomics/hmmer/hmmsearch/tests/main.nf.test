
nextflow_process {

    name "Test Process HMMER_HMMSEARCH"
    script "../main.nf"
    process "HMMER_HMMSEARCH"
    config "./nextflow.config"


    tag "modules"
    tag "modules_nfcore"
    tag "hmmer"
    tag "hmmer/hmmsearch"

    test("hmmsearch") {

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${moduleDir}/tests/test.fasta", checkIfExists: true)
                    ]
                input[1] = file("${moduleDir}/tests/seqdb/test1.hmm*", type: 'dir', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_bam'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
