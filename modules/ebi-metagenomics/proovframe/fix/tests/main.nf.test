nextflow_process {

    name "Test Process PROOVFRAME_FIX"
    script "../main.nf"
    process "PROOVFRAME_FIX"

    tag "modules"
    tag "modules_ebimetagenomics"
    tag "proovframe"
    tag "proovframe/fix"
    tag "proovframe/map"

    test("test - fa_tsv"){
        setup {
            run("PROOVFRAME_MAP") {
                script "../../map/main.nf"
                process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${moduleDir}/tests/fixtures/emales.faa", checkIfExists: true),
                    file("${moduleDir}/tests/fixtures/emales-reads-sim.fa", checkIfExists: true),
                ]
                """
            }
            }
        }

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${moduleDir}/tests/fixtures/emales.faa", checkIfExists: true),
                    file("${moduleDir}/tests/fixtures/emales-reads-sim.fa", checkIfExists: true),                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
