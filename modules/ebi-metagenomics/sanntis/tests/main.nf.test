nextflow_process {

    name "Test Process SANNTIS"
    script "../main.nf"
    process "SANNTIS"

    tag "modules"
    tag "modules_ebimetagenomics"
    tag "sanntis"

    test("interproscan tsv and gbk") {

        when {
            process {
                """
                input[0] = [
                    [ id:'MGYG000300113' ], // meta map
                    file("${moduleDir}/tests/fixtures/interproscan_subset.gff.gz", checkIfExists: true),
                    file("${moduleDir}/tests/fixtures/MGYG000300113_contig35.gbk.gz", checkIfExists: true),
                    []
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("interproscan tsv and faa") {

        when {
            process {
                """
                input[0] = [
                    [ id:'MGYG000300113' ], // meta map
                    file("${moduleDir}/tests/fixtures/interproscan_subset.gff.gz", checkIfExists: true),
                    [],
                    file("${moduleDir}/tests/fixtures/MGYG000300113_contig35_CGC.faa.gz", checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("interproscan tsv and gbk - stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'MGYG000300113' ], // meta map
                    file("${moduleDir}/tests/fixtures/interproscan_subset.gff.gz", checkIfExists: true),
                    file("${moduleDir}/tests/fixtures/MGYG000300113_contig35.gbk.gz", checkIfExists: true),
                    []
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
