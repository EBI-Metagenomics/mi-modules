// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core subworkflows test mapseq_otu_krona
nextflow_workflow {

    name "Test Subworkflow MAPSEQ_OTU_KRONA"
    script "../main.nf"
    workflow "MAPSEQ_OTU_KRONA"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/mapseq_otu_krona"
    // TODO nf-core: Add tags for all modules used within this subworkflow. Example:
    tag "samtools"
    tag "samtools/sort"
    tag "samtools/index"


    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("test_mapseq_otu_krona") {

        when {
            workflow {
                """
                // TODO nf-core: define inputs of the workflow here. Example:
                input[0] = [ [ id:'test', single_end:false ], // meta map
                        file("${moduleDir}/tests/subunit_silva_SSU.fasta", checkIfExists: true)
                        ]
                input[1] = [ 
                        file("${moduleDir}/tests/silva_ssu/silva_ssu-20200130_SSU_trimmed.fasta", checkIfExists: true),
                        file("${moduleDir}/tests/silva_ssu/silva_ssu-20200130_SSU_filtered2.txt", checkIfExists: true),
                        file("${moduleDir}/tests/silva_ssu/silva_ssu-20200130_SSU_trimmed.otu", checkIfExists: true),
                        file("${moduleDir}/tests/silva_ssu/silva_ssu-20200130_SSU_trimmed.fasta.mscluster", checkIfExists: true),
                        "SILVA"
                        ]
                """
            }
        }
        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }
    }
}
