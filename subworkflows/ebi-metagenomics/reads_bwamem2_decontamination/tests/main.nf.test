nextflow_workflow {

    name "Test Subworkflow READS_BWAMEM2_DECONTAMINATON"
    script "../main.nf"
    workflow "READS_BWAMEM2_DECONTAMINATON"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/reads_bwamem2_decontamination"

    // Tags for all modules used within this subworkflow
    tag "bwamem2/mem"
    tag "samtools/bam2fq"

    test("Illumina paired_end decontamination with human") {
        when {
            workflow {
                """
                // Define inputs of the workflow:
                input[0] = [ [ id:'test', [fastq_1, fastq_2] ], // meta map
                        file(params.test_data['bifido_illumina']['reads'], checkIfExists: true)
                        ]
                input[1] = [ file(params.test_data['human_ch1']['genome']['genome_index'], checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out.decontaminated_reads[0][1].findAll {
                    file(it).name != "test_1.decont.fq.gz" &&
                    file(it).name != "test_2.decont.fq.gz"  }).match()},
                { assert file(workflow.out.decontaminated_reads[0][1].find {
                    file(it).name == "test_1.decont.fq.gz" }).exists() },
                { assert file(workflow.out.decontaminated_reads[0][1].find {
                    file(it).name == "test_2.decont.fq.gz" }).exists() },
                { assert snapshot(workflow.out.versions).match("versions") }
            )
        }
    }
}
